[main]
name="translation"
tf_manager=<tf_manager>
output="tests/outputs/beamsearch"
overwrite_output_dir=True
batch_size=16
epochs=5
train_dataset=<train_data>
val_dataset=<val_data>
trainer=<trainer>
runners=<bs_runners>
postprocess=None
evaluation=[("target_beam.rank001", "target", evaluators.BLEU)]
logging_period=20
validation_period=60
random_seed=1234

[tf_manager]
class=tf_manager.TensorFlowManager
num_threads=4
num_sessions=1
save_n_best=4

[train_data]
class=dataset.load
series=["source", "target", "source_chars"]
data=["tests/data/train.tc.en", "tests/data/train.tc.de", (processors.helpers.preprocess_char_based, "source")]
buffer_size=32

[val_data]
class=dataset.load
series=["source", "target", "source_chars"]
data=["tests/data/val.tc.en", "tests/data/val.tc.de", (processors.helpers.preprocess_char_based, "source")]

[encoder_vocabulary]
class=vocabulary.from_wordlist
path="tests/data/encoder_vocab.tsv"

[inpseq]
class=model.sequence.EmbeddedSequence
name="input"
embedding_size=6
max_length=7
data_id="source"
vocabulary=<encoder_vocabulary>

[encoder]
class=encoders.transformer.TransformerEncoder
name="transformer_encoder"
input_sequence=<inpseq>
ff_hidden_size=10
depth=2
n_heads=3
dropout_keep_prob=0.9

[decoder_vocabulary]
class=vocabulary.from_wordlist
path="tests/data/decoder_vocab.tsv"

[decoder]
class=decoders.transformer.TransformerDecoder
name="decoder"
encoders=[<encoder>]
dropout_keep_prob=0.5
data_id="target"
max_output_len=3
vocabulary=<decoder_vocabulary>
embedding_size=6
ff_hidden_size=10
depth=2
n_heads_self=3
n_heads_enc=2

[trainer]
class=trainers.cross_entropy_trainer.CrossEntropyTrainer
decoders=[<decoder>]
optimizer=<lazyadam_g>

[decayed_lr]
class=functions.noam_decay
learning_rate=0.2
model_dimension=6
warmup_steps=111

[lazyadam_g]
class=tf.contrib.opt.LazyAdamOptimizer
beta1=0.9
beta2=0.98
epsilon=1.0e-9
learning_rate=<decayed_lr>

[bs_decoder]
class=decoders.beam_search_decoder.BeamSearchDecoder
name="beam_search_decoder"
parent_decoder=<decoder>
length_normalization=0.6
max_steps=10
beam_size=3

[bs_runners]
class=runners.beam_search_runner_range
output_series="target_beam"
decoder=<bs_decoder>
max_rank=2
