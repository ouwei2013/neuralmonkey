[preprocess]
class=processors.editops.Preprocess
source_id="translated"
target_id="target"

[postprocess]
class=processors.editops.Postprocess
source_id="translated"
edits_id="edits"

[train_dataset]
class=dataset.load
series=["source", "translated", "target", "edits"]
data=["tests/data/postedit/train.src", "tests/data/postedit/train.mt", "tests/data/postedit/train.pe", <preprocess>]

[val_dataset]
class=dataset.load
series=["source", "translated", "target", "edits"]
data=["tests/data/postedit/dev.src", "tests/data/postedit/dev.mt", "tests/data/postedit/dev.pe", <preprocess>]

[source_vocabulary]
class=vocabulary.from_wordlist
path="tests/data/encoder_vocab.tsv"

[target_vocabulary]
class=vocabulary.from_wordlist
path="tests/data/postedit_target_vocab.tsv"

[src_encoder]
class=encoders.SentenceEncoder
rnn_size=15
max_input_len=5
embedding_size=10
dropout_keep_prob=0.8
data_id="source"
name="src_encoder"
vocabulary=<source_vocabulary>

[src_attention]
class=attention.ScaledDotProdAttention
name="attention_source_encoder"
keys_encoder=<src_encoder>

[trans_encoder]
class=encoders.recurrent.RecurrentEncoder
input_sequence=<trans_embedded_input>
rnn_size=15
dropout_keep_prob=0.8
rnn_cell="LSTM"
name="trans_encoder"

[trans_attention]
class=attention.scaled_dot_product.MultiHeadAttention
n_heads=3
name="attention_trans_encoder"
keys_encoder=<src_encoder>
values_encoder=<trans_encoder>

[trans_embedded_input]
class=model.sequence.EmbeddedSequence
name="trans_encoder_input_sequence"
data_id="translated"
embedding_size=10
max_length=5
vocabulary=<target_vocabulary>

[decoder]
class=decoders.decoder.Decoder
name="decoder"
encoders=[<trans_encoder>, <src_encoder>]
attentions=[<trans_attention>, <src_attention>]
rnn_size=30
max_output_len=5
embeddings_source=<trans_embedded_input>
dropout_keep_prob=0.8
data_id="edits"
vocabulary=<target_vocabulary>

[trainer]
class=trainers.cross_entropy_trainer.CrossEntropyTrainer
decoders=[<decoder>]
l2_weight=1.0e-8

[runner]
class=runners.GreedyRunner
decoder=<decoder>
output_series="edits"

[bleu]
class=evaluators.BLEUEvaluator
name="BLEU-4"

[tf_manager]
class=tf_manager.TensorFlowManager
num_threads=4
num_sessions=1
save_n_best=3
minimize_metric=True

[main]
name="post editing"
output="tests/outputs/postedit"
runners=[<runner>]
tf_manager=<tf_manager>
trainer=<trainer>
train_dataset=<train_dataset>
val_dataset=<val_dataset>
test_datasets=[<val_dataset>]
evaluation=[("target", <bleu>), ("target", evaluators.TER)]
batch_size=2
epochs=2
validation_period=2
logging_period=1
visualize_embeddings=[<trans_embedded_input>]
postprocess=[("target", <postprocess>)]
overwrite_output_dir=True