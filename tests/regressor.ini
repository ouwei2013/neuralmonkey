[main]
name="classification"
tf_manager=<tf_manager>
output="tests/outputs/regressor"
overwrite_output_dir=True
batch_size=16
epochs=5
train_dataset=<train_data>
val_dataset=<val_data>
trainer=<trainer>
runners=[<runner>]
postprocess=None
evaluation=[("regression", evaluators.MSE)]
logging_period=50
validation_period=100
random_seed=1234

[tf_manager]
class=tf_manager.TensorFlowManager
num_threads=4
num_sessions=1

[train_data]
class=dataset.load
series=["source", "regression"]
data=["tests/data/train.tc.en", ("tests/data/train.tc.counts", readers.string_vector_reader.FloatVectorReader)]

[val_data]
class=dataset.load
series=["source", "regression"]
data=["tests/data/val.tc.en", ("tests/data/val.tc.counts", readers.string_vector_reader.FloatVectorReader)]

[encoder_vocabulary]
class=vocabulary.from_wordlist
path="tests/data/encoder_vocab.tsv"

[encoder]
class=encoders.recurrent.SentenceEncoder
rnn_size=7
max_input_len=10
embedding_size=11
data_id="source"
vocabulary=<encoder_vocabulary>

[decoder]
class=decoders.sequence_regressor.SequenceRegressor
name="regressor"
encoders=[<encoder>]
data_id="regression"
layers=[10,5]
activation_fn=tf.nn.relu

[trainer]
class=trainers.cross_entropy_trainer.CrossEntropyTrainer
decoders=[<decoder>]
l2_weight=1.0e-8
clip_norm=1.0

[runner]
class=runners.RegressionRunner
decoder=<decoder>
output_series="regression"
